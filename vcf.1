.Dd December 23, 2018
.Dt VCF 1
.Os
.Sh NAME
.Nm vcf
.Nd search and format vCard data
.Sh SYNOPSIS
.Nm
.Op Fl a
.Op Fl d Ar rune=field , Ns ...
.Op Fl f Ar format
.Op Fl i Ar input
.Op Fl s Ar field , Ns ...
.Op Ar term Ns ...
.Sh DESCRIPTION
.Nm
is a tool for searching and formatting vCard data.
For example, it can be used to find a person's email from a vCard contact file
containing many contacts.
The search query is provided through the
.Ar term Ns ...
argument, specifying several search terms.
The search behavior can be customized in several ways; for a detailed
description, see
.Xr SEARCHING .
The options are as follows:
.Bl -tag -width 6n
.It Fl a
Include all matches for the search query in the response, even those that did
not have values for all fields in the format string.
.It Fl d Ar rune=field , Ns ...
Associate the formatting directive
.Ar rune ,
a single rune (Unicode codepoint), with the vCard field
.Ar field .
.It Fl f Ar format
Format the output according to the format string
.Ar format .
The default is
.Sy %n <%e> .
.It Fl i Ar input
Read vCard data from
.Ar input .
If
.Ar input
is the special value
.Sy - ,
then read from standard input (this is the default value).
.It Fl s Ar field , Ns ...
Add the given fields to the list of fields to be searched for the
search terms.
A field name suffixed by
.Sy \&!
will force any value of that field to match the search query if it is to be
output (the field
.Dq must match ) .
For details on what this means, see
.Xr SEARCHING .
By default, only the field
.Sy FN
is searched (at the
.Dq might match
level).
.El
.Ss FORMAT STRINGS
The format of the output produced by
.Nm
can be specified through a format string passed to the
.Fl f
option.
The format string
.Dq language
is similar in spirit to the one understood by
.Xr date 1 :
characters in the format string are represented literally in the
output, unless they are
.Em formatting directives ,
preceded by a single
.Sy % ,
or
.Em escape codes ,
preceded by a single
.Sy \e .
.Pp
Each escape code produces a single character in the resulting output.
The available escape codes are as follows:
.Bl -tag -width 6n
.It \e
.Sy \e ,
a backslash
.It 0
the
.Sy NUL
character (Unicode
.Sy U+0000 )
.It n
the line feed character (newline)
.It t
the tab character
.El
.Pp
Each formatting directive (except for
.Sy % )
results in the contents of a vCard field being added to the output.
When the
.Fl a
flag is provided, an empty or non-existent field will be formatted as
an empty string; without
.Fl a ,
the entire vCard will be ignored.
The built-in formatting directives are as follows:
.Bl -tag -width 6n
.It %
a literal percent sign
.Sy %
.It e
the vCard field
.Sy EMAIL
.It n
the vCard field
.Sy FN
(formatted name)
.It p
the vCard field
.Sy PHONE
.El
.Pp
New formatting directives can be specified using the
.Fl d Ar rune=field , Ns ...
option, associating
.Ar rune
with the vCard field
.Ar field .
Several comma-separated associations can be specified with one
directive, or the option can be given several times.
.Ss SEARCHING
Zero or more search terms can be provided to
.Nm
via the
.Ar term Ns ...
argument.
The
.Fl s Ar field , Ns ...
option is used to specify the fields that should be searched for these terms (the
.Em search fields ) .
As a special case, if no search terms are provided, no filtering is performed
(every vCard in the input will be formatted and output, provided that it
contains all the fields requested to be formatted or the
.Fl a
option is given).
Search fields come in two types, referred to as
.Dq must match
and
.Dq might match ;
the former type is a subset of the latter (every
.Dq must match
field is also a
.Dq might match
field).
.Pp
When deciding if a vCard should be considered for formatting and output,
.Nm
will consult the list of
.Dq might match
fields (that is, all search fields).
If every search term (not case-sensitive) is contained within the value of at
least one search field of a particular vCard, that vCard is considered for
formatting.
During formatting, if one of the
.Dq must match
fields is requested (through a formatting directive), the value of that field
is again checked against the search terms.
If none of the search terms is contained within the value of the field, the
field is ignored (it is treated as if it were not present in the vCard to begin
with).
.Pp
As an example showing the utility of
.Dq must match
fields, consider the following vCard:
.Bd -literal -offset indent
BEGIN:VCARD
VERSION:3.0
FN:John Smith
EMAIL;TYPE=HOME:johnsmith@example.com
EMAIL;TYPE=WORK:jsmith123@example.com
END:VCARD
.Ed
.Pp
Suppose that we use only
.Sy EMAIL
as a
.Dq ( might match )
search field, and use the default output format of
.Sy %n <%e> .
In this case, if we search using the single term
.Dq john ,
the output will be
.Bd -literal -offset indent
John Smith <johnsmith@example.com>
John Smith <jsmith123@example.com>
.Ed
.Pp
This output may be confusing: why were both emails printed, even though only
one contained the substring
.Dq john ?
The reason is that a
.Dq might match
search field is only used to filter entire vCards.
Since the substring
.Dq john
appeared in
.Em at least one
of the email fields in the vCard above, it was sent to the formatter for output.
The formatter, in turn, output as much information as possible from the vCard,
including the work email address
.Dq jsmith123@example.com .
.Pp
If we only want to consider the emails matching our search terms, instead of
all emails in a vCard where at least one matches, we need to make email a
.Dq must match
field.
This can be done by passing
.Sy EMAIL!
to the
.Fl s
option instead of just
.Sy EMAIL .
If we do this, we will obtain only the output
.Bd -literal -offset indent
John Smith <johnsmith@example.com>
.Ed
.Pp
Note that this same observation applies even if we only use the format string
.Dq %e ;
using only a
.Dq might match
field, both emails will still be output, for the same reason as above.
Thus, using a
.Dq must match
field allows
.Nm
to be used as an autocompletion source for email addresses.
.Sh EXAMPLES
.Bl -tag -width 6n
.It Nm Fl a Fl i Ar contacts.vcf Ar john smith
Print all entries for anyone named
.Dq John Smith
in the file
.Ar contacts.vcf
in the format
.Sy NAME <EMAIL> ,
even those that do not have an email.
.It Nm Fl d Ar a=ADR Fl f Ar '%n,%a' Ar jane doe
Using the vCard data supplied through the standard input, print all
entries for anyone named
.Dq Jane Doe
having a non-empty address (vCard field
.Sy ADR )
in the format
.Sy NAME,ADDRESS .
.It Nm Fl d Ar a=ADR Fl f Ar '%+n,%+a' Ar jane doe
The same as the example above, but quote the name and address output fields
according to CSV quoting rules (surround using double quotes, escape double
quotes with two double quotes in a row).
.It Nm Fl i Ar contacts.vcf Fl s Ar 'EMAIL!' Fl f Ar '%e' john
Print all emails from the vCard file
.Ar contacts.vcf
that contain the (case-insensitive) substring
.Dq john .
.El
